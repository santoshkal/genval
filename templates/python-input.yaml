dockerfile:
- stage: 0
  from: "cgr.dev/chainguard/python:latest-dev"
  # Set environment variables for build
  env: "APP_HOME=/app"
# Create a non-root user for the build
  run:
  - "useradd -m -s /bin/bash -d $APP_HOME myappuser"
  # Set the working directory
  workdir: "$APP_HOME"
  # Copy requirements.txt to install dependencies
  copy:
  - "requirements.txt $APP_HOME/"
  # Install application dependencies
  runCmd:
  - "pip install --no-cache-dir -r requirements.txt"
  copyCmd:
  - "src/ $APP_HOME/src/"

  # Stage 2: Runtime environment
- stage: 1
  from: "cgr.dev/chainguard/static:latest"
  # Set environment variables for runtime
  env: "APP_USER=myappuser"
  env1: "APP_HOME=/app"
  # Create a non-root user to run the application
  run:
  - "useradd -m -s /bin/bash -d $APP_HOME $APP_USER"
  # Set the working directory
  workdir: "$APP_HOME"
  # Copy installed Python packages from the build stage
  copy:
  - "$APP_HOME /usr/local/lib/python3.9/site-packages/"
  # Copy the application source code
  copyCmd:
  - "src/ $APP_HOME/src/"
  # Drop root privileges and run the application as the non-root user
  user: "$APP_USER"
  # Set the entry point for the container
  cmd:
  - "python"
  - "src/app.py"



